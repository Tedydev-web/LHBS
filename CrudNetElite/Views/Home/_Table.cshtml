@model CrudNetElite.Helpers.PaginatedList<CrudNetElite.Models.ClientViewModel>
@using CrudNetElite.Helpers
@{
    int baseIndex = (Model.PageIndex - 1) * Model.PageSize;// Calculate the base index for the current page
    int from = Model.TotalItems == 0 ? 0 : baseIndex + 1;// Determine the 'from' value, which is 0 if there are no items, otherwise it calculates the starting index
    int to = Math.Min(baseIndex + Model.PageSize, Model.TotalItems); // Determine the 'to' value, which is either the total items (if we're on the last page), or the maximum value for the current page
    bool showActionColumn = CrudNetElite.Helpers.ClientTableConfig.ShowActionColumn;
    int totalColumn = Model.ColumnHeaders.Count + (showActionColumn ? 1 : 0);
}
<div class="mt-1 table-responsive overflow-auto position-relative">
    <table class="table table-hover align-middle mb-0">
        <thead class="table-light">
            <tr class="d-none d-lg-table-row">
                <partial name="_Thead" view-data='@(new ViewDataDictionary(ViewData) { { "ColumnHeaders", Model.ColumnHeaders },{"Sort",ViewData["CurrentSort"]?.ToString()} })' />
                @if (showActionColumn == true)
                {
                    <th class="border-0 notexport">Action</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (Model.TotalItems > 0)
            {
                foreach (var item in Model)
                {
                    <tr class="lh-sm">
                        @foreach (var column in CrudNetElite.Helpers.ClientTableConfig.TableColumns)
                        {
                            <td class="d-block d-lg-table-cell py-2 py-lg-3">@item.GetType().GetProperty(column.Title)?.GetValue(item, null)</td>
                        }
                        @if (showActionColumn == true)
                        {
                            <td class="fixed-end notexport">
                                <a class="fw-bolder fs-4 lh-1 pe-1 text-decoration-none" asp-action="edit" asp-route-id="@item.Id">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                                <a class="fw-bolder fs-4 lh-1 text-decoration-none" href="javascript:void(0)"
                                   onclick="event.stopPropagation();openConfirmationModal('@GeneralHelper.EscapeQuotes(item.Name)',
                                   '@Url.Action("delete", new { id= item.Id})', null, null)">
                                   <i class="bi bi-trash3"></i>
                                </a>
                            </td>
                        }
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td class="text-center" colspan="@totalColumn">No Data Available</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="mt-3">
    @await Html.PartialAsync("_Paging", new ViewDataDictionary(ViewData) {
    { "ShowingFrom", from }, { "ShowingTo", to },{ "TotalItems", Model.TotalItems }, { "TotalPages", Model.TotalPages },
    { "HasPreviousPage", Model.HasPreviousPage },{ "HasNextPage", Model.HasNextPage }, { "PageIndex", Model.PageIndex } })
</div>

<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    });
</script>
